/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Xs2RwI22ksb
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { beginStory } from "@/app/actions"
import { StoryProperties } from "@/app/models/models"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectGroup, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { useState } from "react"
import { LoadingComponent } from "./loading-component"

interface CreateStoryFormProps {
  callback: (properties: StoryProperties) => void
}

export function CreateStoryFormComponent({ callback }: CreateStoryFormProps) {

  const [title, setTitle] = useState<string>("")
  const [genre, setGenre] = useState<string>("")
  const [loading, setLoading] = useState(false)

  async function handleSubmit() {
    if (!fieldsSet()) return
    setLoading(true)
    const response = await beginStory(title, genre)
    setLoading(false)
    callback({ title: title, genre: genre, initalStory: response.story, initialChoices: response.choices })
  }

  function fieldsSet() {
    return title.length > 0 && genre.length > 0
  }
  if (loading) {
    return (
      <LoadingComponent title="Creando historia" message="Por favor espera mientras se crea la historia." />
    );
  }

  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle>Crear nueva historia</CardTitle>
        <CardDescription>Introduce título y género de la historia.</CardDescription>
      </CardHeader>
      <CardContent>
        <div className="grid gap-4">
          <div className="grid gap-2">
            <Label htmlFor="title">Título</Label>
            <Input id="title" placeholder="Introduce el título de la historia" onChange={e => setTitle(e.target.value)} />
          </div>
          <div className="grid gap-2">
            <Label htmlFor="genre">Género</Label>
            <Select onValueChange={e => setGenre(e)}>
              <SelectTrigger>
                <SelectValue placeholder="Selecciona un género" />
              </SelectTrigger>
              <SelectContent>
                <SelectGroup>
                  <SelectItem value="fiction">Ficción</SelectItem>
                  <SelectItem value="non-fiction">No-Ficción</SelectItem>
                  <SelectItem value="fantasy">Fanstasia</SelectItem>
                  <SelectItem value="mystery">Misterio</SelectItem>
                  <SelectItem value="romance">Romance</SelectItem>
                  <SelectItem value="sci-fi">Ciencia Ficción</SelectItem>
                </SelectGroup>
              </SelectContent>
            </Select>
          </div>
          <Button className="w-full" disabled={!fieldsSet() || loading} onClick={handleSubmit}>
            Crear Historia
          </Button>
        </div>
      </CardContent>
    </Card>
  )
}
